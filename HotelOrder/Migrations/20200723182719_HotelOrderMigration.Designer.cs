// <auto-generated />
using System;
using HotelOrder.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelOrder.Migrations
{
    [DbContext(typeof(HotelOrderDbContext))]
    [Migration("20200723182719_HotelOrderMigration")]
    partial class HotelOrderMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelOrder.Models.OrderTracking", b =>
                {
                    b.Property<int>("OrderTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_tracking_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("OrderNumber")
                        .HasColumnName("order_number")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("OrderStatusId")
                        .HasColumnName("order_status_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("OrderTrackingId");

                    b.HasIndex("OrderNumber");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("order_tracking");
                });

            modelBuilder.Entity("HotelOrder.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DiningTableId")
                        .HasColumnName("dining_table_id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MenuId")
                        .HasColumnName("menu_id")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnName("order_number")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("OrderId");

                    b.HasIndex("DiningTableId");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasName("IX_orders");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticDiningTables", b =>
                {
                    b.Property<int>("DiningTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dining_table_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DiningTableName")
                        .HasColumnName("dining_table_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("DiningTableId");

                    b.ToTable("static_dining_tables");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticMenuHeaders", b =>
                {
                    b.Property<int>("MenuHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("menu_header_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MenuHeaderName")
                        .HasColumnName("menu_header_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MenuHeaderId");

                    b.ToTable("static_menu_headers");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticMenus", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("menu_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MenuHeaderId")
                        .HasColumnName("menu_header_id")
                        .HasColumnType("int");

                    b.Property<string>("MenuName")
                        .HasColumnName("menu_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("PreferenceId")
                        .HasColumnName("preference_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MenuId");

                    b.HasIndex("MenuHeaderId");

                    b.HasIndex("PreferenceId");

                    b.ToTable("static_menus");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticOrdersStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_status_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("StatusName")
                        .HasColumnName("status_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("OrderStatusId");

                    b.ToTable("static_orders_status");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticPreferences", b =>
                {
                    b.Property<int>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("preference_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_deleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PreferenceName")
                        .HasColumnName("preference_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_time_stamp")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PreferenceId");

                    b.ToTable("static_preferences");
                });

            modelBuilder.Entity("HotelOrder.Models.OrderTracking", b =>
                {
                    b.HasOne("HotelOrder.Models.Orders", "OrderNumberNavigation")
                        .WithMany("OrderTracking")
                        .HasForeignKey("OrderNumber")
                        .HasConstraintName("FK_order_tracking_orders")
                        .HasPrincipalKey("OrderNumber");

                    b.HasOne("HotelOrder.Models.StaticOrdersStatus", "OrderStatus")
                        .WithMany("OrderTracking")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK_order_tracking_static_orders_status");
                });

            modelBuilder.Entity("HotelOrder.Models.Orders", b =>
                {
                    b.HasOne("HotelOrder.Models.StaticDiningTables", "DiningTable")
                        .WithMany("Orders")
                        .HasForeignKey("DiningTableId")
                        .HasConstraintName("FK_orders_static_dining_tables");

                    b.HasOne("HotelOrder.Models.StaticMenus", "Menu")
                        .WithMany("Orders")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_orders_static_menus");
                });

            modelBuilder.Entity("HotelOrder.Models.StaticMenus", b =>
                {
                    b.HasOne("HotelOrder.Models.StaticMenuHeaders", "MenuHeader")
                        .WithMany("StaticMenus")
                        .HasForeignKey("MenuHeaderId")
                        .HasConstraintName("FK_static_menus_static_menu_headers");

                    b.HasOne("HotelOrder.Models.StaticPreferences", "Preference")
                        .WithMany("StaticMenus")
                        .HasForeignKey("PreferenceId")
                        .HasConstraintName("FK_static_menus_static_preferences");
                });
#pragma warning restore 612, 618
        }
    }
}
